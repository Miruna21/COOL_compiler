sequence(e) ::= "<e; separator=\"\n\">"
sequenceSpaced(e) ::= "<e; separator=\"\n\n\">"

program(data, text) ::= <<
.data
    .align 2
    .globl class_nameTab
    .globl Int_protObj
    .globl String_protObj
    .globl bool_const0
    .globl bool_const1
    .globl Main_protObj
    .globl _int_tag
    .globl _string_tag
    .globl _bool_tag

<data>

    .globl heap_start
heap_start:
    .word 0
.text
    .globl Int_init
    .globl String_init
    .globl Bool_init
    .globl Main_init
    .globl Main.main
<text>
	li $v0, 10
	syscall		#exit
>>



str_attr(len, str) ::= <<
   .word <len>
   .asciiz <str>
   .align 2
>>

word(value) ::= <<
    .word <value>
>>

protObj(class, index, dim, disp_ptr, attributes) ::= <<
<class>_protObj:
    .word <index>
    .word <dim>
    .word <disp_ptr>
<attributes>
>>

objTab() ::= <<
class_objTab:

>>

dispTab(class, methods) ::= <<
<class>_dispTab:
<methods>
>>

nameTab(names) ::= <<
class_nameTab:
<names>
>>

methodDef(class, body, offset) ::= <<
<class>_init:
    addiu $sp $sp -12
    sw $fp 12($sp)
    sw $s0 8($sp)
    sw $ra 4($sp)
    addiu $fp $sp 4
    move $s0 $a0
<body>
    lw $fp 12($sp)
    lw $s0 8($sp)
    lw $ra 4($sp)
    addiu $sp $sp <offset>  # 12 + 4 * nr_params
    jr $ra
>>